Grammar for regex:

<Regex_R>  ::= <Empty> | 
               <Regex_DR> | 
               <Regex_DR> <Regex_R>

<Regex_DR> ::= <Regex_UR> <Regex_RR> |
               <Regex_UR> * <Regex_RR> |
               <Regex_UR> + <Regex_RR> |
               <Regex_UR> ? <Regex_RR>

<Regex_RR> ::= <Regex_DR> |
               <Empty>

<Regex_UR> ::= <Regex_CHAR> |
               RegexWildcard_t |
               [ <Regex_G> ] |
               [^ <Regex_G> ] |
               ( <Regex_R> )

<Regex_G>  ::= <Regex_UG> <Regex_RG> |

<Regex_UG> ::= <Regex_CHAR> |
               <Regex_CHAR> - <Regex_CHAR>

<Regex_RG> ::= <Regex_G> |
               <Empty>

<Regex_CHAR> ::= RegexChar_t |
                 EscapedChar_t

               
